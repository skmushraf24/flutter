 Develop a Flutter application that includes a TextFormField for user input. The data entered into the TextFormField should be persistently stored in local storage. When the user reopens the app, the previously entered text should be displayed in the TextFormField. 

code:

import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

void main() {
  runApp(MaterialApp(
    debugShowCheckedModeBanner: false,
    home: PersistentTextField(),
  ));
}

class PersistentTextField extends StatefulWidget {
  @override
  _PersistentTextFieldState createState() => _PersistentTextFieldState();
}

class _PersistentTextFieldState extends State<PersistentTextField> {
  final TextEditingController _controller = TextEditingController();
  final String _storageKey = 'user_text'; // key to save text

  @override
  void initState() {
    super.initState();
    _loadSavedText(); // load saved text on startup
  }

  // Load text from SharedPreferences
  Future<void> _loadSavedText() async {
    final prefs = await SharedPreferences.getInstance();
    String? savedText = prefs.getString(_storageKey);
    if (savedText != null) {
      setState(() {
        _controller.text = savedText;
      });
    }
  }

  // Save text to SharedPreferences
  Future<void> _saveText(String value) async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setString(_storageKey, value);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Persistent TextFormField'),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Form(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextFormField(
                controller: _controller,
                decoration: InputDecoration(
                  labelText: 'Enter your text',
                  border: OutlineInputBorder(),
                ),
                onChanged: (value) {
                  _saveText(value); // Save automatically as user types
                },
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () async {
                  await _saveText(_controller.text);
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Text saved locally!')),
                  );
                },
                child: Text('Save Manually'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
